DROP DATABASE IF EXISTS TestingSystem;
CREATE DATABASE TestingSystem;
USE TestingSystem;

DROP TABLE IF EXISTS Department;
CREATE TABLE Department(
	DepartmentID TINYINT UNSIGNED PRIMARY KEY UNIQUE KEY,
    DepartmentNAME VARCHAR(20) NOT NULL UNIQUE KEY
    );
	
DROP TABLE IF EXISTS Position;
CREATE TABLE Position (
	PositionID TINYINT UNSIGNED PRIMARY KEY UNIQUE KEY,
    PositionName ENUM("DEV","Test","Scrum Master","PM")
    );
    
DROP TABLE IF EXISTS `Account`;
CREATE TABLE `Account` (
	AccountID TINYINT UNSIGNED PRIMARY KEY UNIQUE KEY,
    Email VARCHAR(20) NOT NULL UNIQUE KEY,
    Username VARCHAR(30) NOT NULL,
    FullName NVARCHAR(50) NOT NULL,
    DepartmentID TINYINT UNSIGNED NOT NULL,
    PositionID TINYINT UNSIGNED NOT NULL,
    CreateDate DATETIME DEFAULT NOW(),
    FOREIGN KEY (DepartmentID) REFERENCES Department(DepartmentID),
    FOREIGN KEY (PositionID) REFERENCES Position (PositionID)
    );

DROP TABLE IF EXISTS `Group`;
CREATE TABLE `Group`(
	GroupID TINYINT UNSIGNED PRIMARY KEY UNIQUE KEY,
    GroupName VARCHAR(20) NOT NULL,
    CreatorID TINYINT UNSIGNED NOT NULL UNIQUE KEY,
    CreateDate DATETIME DEFAULT NOW()
    );

DROP TABLE IF EXISTS GroupAccount;
CREATE TABLE GroupAccount(
	GroupID TINYINT UNSIGNED UNIQUE KEY,
    AccountID TINYINT UNSIGNED,
    JoinDate DATETIME DEFAULT NOW(),
    FOREIGN KEY (GroupID) REFERENCES `Group`(GroupID),
    FOREIGN KEY (AccountID) REFERENCES `Account`(AccountID)
    );
    
DROP TABLE IF EXISTS TypeQuestion;
CREATE TABLE TypeQuestion(
	TypeID TINYINT UNSIGNED PRIMARY KEY UNIQUE KEY,
    TypeName ENUM("Essay","Multiple-Choice") NOT NULL
);

DROP TABLE IF EXISTS CategoryQuestion;
CREATE TABLE CategoryQuestion(
	CategoryID TINYINT UNSIGNED PRIMARY KEY UNIQUE KEY,
    CategoryName ENUM("Java",".NET","SQL","Postman","Ruby")
);

DROP TABLE IF EXISTS Question;
CREATE TABLE Question(
	QuestionID TINYINT UNSIGNED PRIMARY KEY UNIQUE KEY,
    Content VARCHAR(50),
    CategoryID TINYINT UNSIGNED NOT NULL,
    TypeID TINYINT UNSIGNED NOT NULL,
    CreatorID TINYINT UNSIGNED NOT NULL,
    CreateDate DATETIME DEFAULT NOW(),
    FOREIGN KEY (TypeID) REFERENCES TypeQuestion(TypeID),
    FOREIGN KEY (CreatorID) REFERENCES `Group`(CreatorID),
    FOREIGN KEY (CategoryID) REFERENCES CategoryQuestion(CategoryID)
);

DROP TABLE IF EXISTS Answer;
CREATE TABLE Answer(
	AnswerID TINYINT UNSIGNED PRIMARY KEY,
    Content NVARCHAR(50) NOT NULL,
    QuestionID TINYINT UNSIGNED NOT NULL,
    isCorrect ENUM("T","F"),
    FOREIGN KEY (QuestionID) REFERENCES Question(QuestionID)
);

DROP TABLE IF EXISTS Exam;
CREATE TABLE Exam(
	ExamID TINYINT UNSIGNED PRIMARY KEY UNIQUE KEY,
    `Code` TINYINT,
    Title NVARCHAR(20) NOT NULL,
    CategoryID TINYINT UNSIGNED NOT NULL,
    Duration DATETIME DEFAULT NOW(),
    CreatorID TINYINT UNSIGNED NOT NULL,
    CreateDate DATETIME DEFAULT NOW(),
    FOREIGN KEY (CreatorID) REFERENCES `Group`(CreatorID),
    FOREIGN KEY (CategoryID) REFERENCES CategoryQuestion(CategoryID)
);

DROP TABLE IF EXISTS ExamQuestion;
CREATE TABLE ExamQuestion(
	ExamID TINYINT UNSIGNED NOT NULL,
    QuestionID TINYINT UNSIGNED NOT NULL,
    FOREIGN KEY (QuestionID) REFERENCES Question(QuestionID),
    FOREIGN KEY (ExamID) REFERENCES Exam(ExamID)
);